a locally testable code is a type of error-correcting code for which it can be determined if a string is a word in that code by looking at a small ( frequently constant ) number of bits of the string .   in some situations , it is useful to know if the data is corrupted without decoding all of it so that appropriate action can be taken in response .   for example , in communication , if the receiver encounters a corrupted code , it can request the data be re-sent , which could increase the accuracy of said data .   similarly , in data storage , these codes can allow for damaged data to be recovered and rewritten properly .   in contrast , locally decodable codes use a small number of bits of the codeword to probabilistically recover the original information .   the fraction of errors determines how likely it is that the decoder correctly recovers the original bit ; however , not all locally decodable codes are locally testable .   clearly , any valid codeword should be accepted as a codeword , but strings that are not codewords could be only one bit off , which would require many ( certainly more than a constant number ) probes .   to account for this , testing failure is only defined if the string is off by at least a set fraction of its bits .   this implies words of the code must be longer than the input strings by adding some redundancy .